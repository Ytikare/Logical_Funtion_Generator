Проектът е направен на C# .net 8

Изразите са предвидени да са в oбратен полски запис,
като всеки параметър, оператор и име на фукция са разделени със празно място
Пр: a & b ==> a b &
: a&(b|c)&d  ==> abc|&d&

Полезен сайт, който превръща нормали изрази в обратен полски запис:
https://www.calcont.in/Conversion/infix_to_postfix

(Забележка: сайта не преобразува правилно изрази със "!".
Ако се преобразува израз със "!" е желателно да се премахнат от всички "!"
и след преобразуването да се добавят след съотвения параметър
Пр: а&!b трява да е ab!&, но сайта ще даде a&b!)


Валидни примери (подред):
DEFINE funcA(a, b): "a b &"
DEFINE funcB(a, b, c, d): "a b c | & d ! &"
DEFINE funcC(a, b, c): "funcA(a, b) c &"

SOLVE funcA(1, 0) => Result: 0
SOLVE funcB(1, 1, 1, 0) => Result: 1
SOLVE funcC(1, 0, 1) => Result: 0


ALL funcA: =>
0 0 : 0
0 1 : 0
1 0 : 0
1 1 : 1

ALL funcC
0 0 0 : 0
0 0 1 : 0
0 1 0 : 0
0 1 1 : 0
1 0 0 : 0
1 0 1 : 0
1 1 0 : 0
1 1 1 : 1

EXIT (прекратява програмата)

Невалидни примери:
DEFINE funcA(a, b, c): "a b &"
DEFINE funcA(a, b): "a b & c |"

(след дефиниране на funcA)
SOLVE funcA(1, 1, 1)

ALL funcB